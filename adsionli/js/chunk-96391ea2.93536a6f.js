(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-96391ea2"],{"0a8f":function(t){t.exports=JSON.parse('{"data":[{"label":"字母（Letter） L:","child":[{"label":"小写（lowercase） Ll"},{"label":"修饰（modifier） Lm"},{"label":"首字母大写（titlecase） Lt"},{"label":"大写（uppercase） Lu"},{"label":"其它（other） Lo"}]},{"label":"数字（Number） N:","child":[{"label":"十进制数字（decimal digit） Nd"},{"label":"字母数字（letter number） Nl"},{"label":"其它（other） No"}]},{"label":"标点符号（Punctuation） P:","child":[{"label":"链接符（connector） Pc"},{"label":"横杠（dash） Pd"},{"label":"起始引用号（initial quote） Pi"},{"label":"结束引用号（final quote） Pf"},{"label":"开（open） Ps"},{"label":"闭（close） Pe"},{"label":"其它（other） Po"}]},{"label":"标记（Mark） M (accents etc):","child":[{"label":"间隔合并（spacing combining） Mc"},{"label":"封闭（enclosing） Me"},{"label":"非间隔（non-spacing） Mn"}]},{"label":"符号（Symbol） S:","child":[{"label":"货币（currency） Sc"},{"label":"修饰（modifier） Sk"},{"label":"数学（math） Sm"},{"label":"其它（other） So"}]},{"label":"分隔符（Separator） Z:","child":[{"label":"行（line） Zl"},{"label":"段落（paragraph） Zp"},{"label":"空格（space） Zs"}]},{"label":"其它（Other） C","child":[{"label":"控制符（control） Cc"},{"label":"格式（format） Cf"},{"label":"未分配（not assigned） Cn"},{"label":"私有（private use） Co"},{"label":"代理伪字符（surrogate） Cs"}]},{"label":"等等..."}],"structure":{"children":"child","label":"label"}}')},a15b:function(t,a,s){"use strict";var e=s("23e7"),l=s("e330"),c=s("44ad"),i=s("fc6a"),o=s("a640"),n=l([].join),_=c!=Object,r=o("join",",");e({target:"Array",proto:!0,forced:_||!r},{join:function(t){return n(i(this),void 0===t?",":t)}})},f59a:function(t,a,s){"use strict";s.r(a);var e=function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",[s("h1",[t._v("正则学习")]),s("el-divider"),s("div",[s("div",{staticClass:"paragraph"},[t._v("字符串高亮显示案例：")]),t._m(0),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:t.resetHighLight}},[t._v("重置")]),s("el-button",{on:{click:t.handleStringHighLight}},[t._v("运行")])],1),t._m(1)]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("选择符 |")]),s("div",{staticClass:"paragraph"},[t._v("代码示例:")]),t._m(2),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.changeValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handleChange}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试: "),s("span",{staticClass:"font_emphasize"},[t._v(t._s(t.changeValue))])])]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("原子表[]与原子组()")]),s("div",{staticClass:"summary"},[s("span",[t._v("原子表中的每一个元素都是一个或，比如说[123456]可以转化为(1|2|3|4|5|6),也就是说 "),s("font",{staticClass:"font_emphasize"},[t._v("原子表中写入的都是按照单个进行选择符的分割的。")])],1),s("br"),s("span",[t._v("原子组中则 "),s("font",{staticClass:"font_emphasize"},[t._v("可以声明按块来进行添加选择符进行分割")]),t._v(" ，比如说(123|345)。")],1)]),t._m(3),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.atomicValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handleAtom}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试: "),s("span",{staticClass:"font_emphasize"},[t._v(t._s(t.atomicValue))])])]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("转义")]),t._m(4),t._m(5),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.esacpe=["",""]}}},[t._v("重置")]),s("el-button",{on:{click:t.handleEsacpe}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},t._l(t.esacpe,(function(a,e){return s("p",{key:e,staticClass:"font_emphasize"},[t._v(t._s(a))])})),0)]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("字符边界约束：起始符^ 结束符$")]),t._m(6),t._m(7),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.borderValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handleBorder}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试: "),s("span",{staticClass:"font_emphasize"},[t._v(t._s(t.borderValue))])])]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("数字与空白元字符")]),t._m(8),t._m(9),s("br"),s("div",{staticClass:"summary"},[s("span",[t._v(" 当起始符^在原子组[]中的时候代表的是 "),s("font",{staticClass:"font-emphasize"},[t._v("非")]),t._v("的意思 ，也就是说原子组中的表示就变为 "),s("font",{staticClass:"font-emphasize"},[t._v("!(xxx|xxx|xxx|xxx)")]),t._v(" 如此形式了 ")],1)]),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.numberSpaceValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handleNumberSpace}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试： "),t._l(t.numberSpaceValue,(function(a,e){return s("p",{key:e,staticClass:"font_emphasize"},[t._v(t._s(a))])}))],2)]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("w与W元字符")]),t._m(10),t._m(11),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.judgeInputValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handleChar}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试: "),s("span",{staticClass:"font_emphasize"},[t._v("输入是否符合要求："+t._s(t.judgeInputValue))])])]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("点元字符 .")]),t._m(12),t._m(13),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.pointValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handlePoint}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试: "),t._l(t.pointValue,(function(a,e){return s("p",{key:e,staticClass:"font_emphasize"},[t._v(t._s(a))])}))],2)]),s("el-divider"),t._m(14),s("el-divider"),t._m(15),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("m多行匹配修正符")]),t._m(16),t._m(17),s("div",{staticClass:"paragraph mt-10 mb-10",staticStyle:{"text-align":"right"}},[s("el-button",{attrs:{type:"danger"},on:{click:function(a){t.moreParagraphValue=""}}},[t._v("重置")]),s("el-button",{on:{click:t.handleMoreParagraphValue}},[t._v("运行")])],1),s("div",{staticClass:"paragraph mb-10"},[t._v(" 运行测试: "),s("p",{staticClass:"font_emphasize"},[t._v(t._s(t.moreParagraphValue))])])]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("字符与字符属性")]),t._m(18),s("div",{staticClass:"summary"},[s("span",[t._v("这里列举一些常用的字符属性")]),s("tree-list",{attrs:{structure:t.structure,treeData:t.treeData}}),s("a",{attrs:{target:"_blank",rel:"noopener noreferrer",href:"https://zh.javascript.info/regexp-unicode"}},[t._v("参考网站")])],1),t._m(19),t._m(20)]),s("el-divider"),s("div",{staticClass:"mt-10"},[s("h3",[t._v("RegExp类中的lastIndex静态属性与exec方法以及sticky属性的说明")]),s("div",{staticClass:"paragraph"},[s("p",[t._v(" 1. 在RegExp类中，lastIndex这个静态属性是用来记录当使用RegExp进行正则匹配时，设置从第几位开始进行匹配， 当匹配成功时，"),s("font",{staticClass:"font_emphasize"},[t._v("lastIndex属性会自动变更为匹配成功的那个字符串的结束位置并进行变更。")]),s("font",{staticClass:"font_emphasize"},[t._v("如果匹配失败，lastIndex属性 会变为0。")])],1),s("p",[t._v(" 2. exec方法实际就和String类下的match方法是类似的，返回的参数的形式也是 ")]),t._m(21),s("p",[t._v(" 但是exec方法与match方法之间不同在于一个是RegExp类下的，一个是String类下的。 在RegExp类下，则可以通过配合lastIndex这个属性，来循环出每一个符合匹配要求的。代码如下： ")]),t._m(22),s("p",[t._v(" 3. sticky属性说明，其代表的是修正符y，反映了搜索是否具有粘性（ 仅从正则表达式的 lastIndex 属性表示的索引处搜索 ）, 这个属性就是非常依赖于lastIndex的一个属性。 sticky属性在匹配大文本的时候可以提高效率，我们可以通过通过y修正符的设置， 来提升效率，"),s("font",{staticClass:"font_emphasize"},[t._v("因为他不会像g修正符那样去全部匹配，他只会在匹配成功一次之后就会停下来，节省了匹配时间。")])],1),t._m(23)])]),s("el-divider"),s("div",{staticClass:"mt_10"},[s("h3",[t._v("原子表知识的拓展：区间匹配，排除匹配")]),t._m(24),s("div",{staticClass:"paragraph"},[s("p",[t._v("1. 区间匹配(代码示例)：")]),t._m(25),s("p",[t._v(" 2. 排除匹配, 字面意思，就是使用原子表时，原子表内容是我们所不需要的，这个时候原子表中的"),s("font",{staticClass:"emphasize"},[t._v("^")]),t._v(" 这个符号就不表示起始边界符，而是表示排除的意思，代码示例如下： ")],1),t._m(26)])]),s("el-divider"),s("div",{staticClass:"mt_10"},[s("h3",[t._v("原子组的知识拓展")]),s("div",{staticClass:"summary"},[s("span",[t._v(" 原子组的表示是(), 在一个正则匹配式子中，一个被原子组包裹的内容，可以在后面使用\\1,\\2,\\3,\\4...进行获取到， "),s("font",{staticClass:"font_emphasize"},[t._v(" 但是这里要注意一下，一个原子组对应一个\\1,只有当你有足够的原子组进行包裹的时候，才会生成对应的快速使用的编号， 且这个编号从1开始进行编号 ")])],1),s("span",[t._v(" 在原子组中不会像原子表中将所有特殊字符变为普通字符，其依然是特殊字符，需要使用转义才可以表达普通字符！ ")])]),s("div",{staticClass:"paragraph"},[s("ul",{staticClass:"list_label"},[s("li",[s("p",{staticClass:"label_title"},[t._v("原子组返回使用, 代码示例如下：")]),s("div",{staticClass:"code"},[s("p",{staticClass:"note"},[t._v("//邮箱匹配示例(一般模式邮箱)")]),s("p",{staticClass:"code_font"},[t._v('let str = "adsionli@foxmail.com"')]),s("p",{staticClass:"code_font"},[t._v("let reg = '/[\\w-]+@([\\w]+\\.)+(com|org|cn|cc|net|top)/gi'")]),s("p",{staticClass:"code_font"},[t._v("str.match(reg)")]),s("p",{staticClass:"note"},[t._v("//标签匹配")]),s("p",{staticClass:"code_font"},[t._v('let t = "'+t._s(t.atomHt1)+'"')]),s("p",{staticClass:"code_font"},[t._v("let reg1 = "+t._s(t.regGroup1))]),s("p",{staticClass:"code_font"},[t._v("t.match(reg1)")])])]),s("li",[s("p",{staticClass:"label_title"},[t._v("原子组的替换操作")]),s("div",{staticClass:"label_body"},[s("p",[t._v("在字符串进行replace的操作时，可以直接使用$1,$2,$3...的形式来进行快速的替换，其就对应原子组的框定的编号=> \\1,\\2,\\3...的匹配项！")]),s("p",[t._v("代码示例:")]),s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let str = "'+t._s(t.atomHt2)+'"')]),s("p",{staticClass:"code_font"},[t._v("let reg = '"+t._s(t.regGroup2)+"'")]),s("p",{staticClass:"code_font"},[t._v("str.replace(reg, '"+t._s(t.atomHt3)+"')")]),s("p",{staticClass:"note"},[t._v("//此时这里输出的就是h1,h3都会被替换成p标签")]),s("p",{staticClass:"note"},[t._v("//这里最终会输出的就是"+t._s(t.atomHt5))]),s("p",{staticClass:"code_font"},[t._v('let ht = "**加粗内容**"')]),s("p",{staticClass:"code_font"},[t._v('let reg = "/(\\*{2}).*\\1/gi"')]),s("p",{staticClass:"code_font"},[t._v('ht.replace(reg, "'+t._s(t.atomHt5)+'")')])])])]),s("li",[s("p",{staticClass:"label_title"},[t._v("原子表的嵌套分组使用分析及原子表嵌套不记录分组")]),s("div",{staticClass:"label_body"},[s("p",[t._v("原子表是可以嵌套使用的，比如说(\\w(\\d(\\s)))，这就是一个原子表的嵌套，那么最外层的原子表是: \\w(\\d(\\s))，次外层的原子表: \\d(\\s)，最内层的是: \\s。")]),s("p",[t._v("这就是原子表的嵌套表示方法。")]),s("p",[t._v("原子表嵌套不记录分组则需要用到的是"),s("font",{staticClass:"font_emphasize"},[t._v("?:")]),t._v("这个标识符")],1),s("p",[t._v("示例分析如下:")])]),s("div",{staticClass:"code"},[s("p",{staticClass:"note"},[t._v("//提取域名数据")]),s("p",{staticClass:"code_font"},[t._v('let str = "'+t._s(t.atomHt4)+'"')]),s("p",{staticClass:"code_font"},[t._v("let reg =new RegExp('"+t._s(t.regGroup3)+"')")]),s("p",{staticClass:"code_font"},[t._v("while(res = reg.exec(str)){")]),s("p",{staticClass:"code_font tab_1"},[t._v("console.log(res)")]),s("p",{staticClass:"code_font"},[t._v("}")])]),s("div",{staticClass:"label_body"},[s("p",[t._v("通过输出我们可以看到\\2,\\3都没有了，只有\\1还是存在的，且输出的是后面的网址就是我们所需要的部分，这就是"),s("font",{staticClass:"font_emphasize"},[t._v("?:")]),t._v("的作用，能够不记录分组")],1)])])])])]),s("el-divider"),t._m(27),s("el-divider"),s("div",{staticClass:"mt-10 mb-80"},[s("h3",[t._v("正则使用的补充")]),s("ul",{staticClass:"list_label"},[t._m(28),t._m(29),t._m(30),s("li",[s("p",{staticClass:"label_title"},[t._v("正则的别名使用")]),t._m(31),s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let reg = new RegExp(/<(a.*href=['\"])("+t._s(t.atomHt6)+"(http(s)?:\\/\\/)?(\\w+\\.)+(com|cn|org|top|xzy)+)['\"]>[\\s\\S]+<\\/a>/)")]),s("p",{staticClass:"code_font"},[t._v("let str = "+t._s(t.atomHt7))]),s("p",{staticClass:"code_font"},[t._v("str.match(reg, $"+t._s(t.atomHt8)+")")])]),s("div",{staticClass:"summary"},[s("span",[t._v("这段代码可以看出：?"+t._s(t.atomHt9)+",就是可以设置为正则的别名使用")])])])])]),s("el-divider",[t._v("正则学习结束啦！如果有新的使用场景，会整理到对应的标签下，感谢学习")])],1)},l=[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let con = prompt("输入需要替换的内容,可用正则")')]),s("p",{staticClass:"code_font"},[t._v('let reg = new RegExp(con, "g")')]),s("p",{staticClass:"code_font"},[t._v('let data = document.getElementById("string_high_light")')]),s("p",{staticClass:"code_font"},[t._v("data.innerHTML = data.innerHTML.replace(reg, search => {")]),s("p",{staticClass:"code_font tab_1"},[t._v('return span style="color:red" ${search} /span')]),s("p",{staticClass:"code_font"},[t._v("});")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[t._v(" 运行测试: "),s("span",{attrs:{id:"string_high_light"}},[t._v("adsionli1996")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let tel = 021-88888888")]),s("p",{staticClass:"code_font"},[t._v("let regular = /(010|021)\\-\\d{7,8}/.test(tel)")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let value = "1996031119960422";')]),s("p",{staticClass:"code_font"},[t._v("console.log(value.match(/[199603]/g));")]),s("p",{staticClass:"code_font"},[t._v("console.log(value.match(/(1996|03)/g));")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v(" 在正则中的转义字符\\的作用实际上和在其他编程语言的转义字符的作用是完全相同的，都是用来对一些特殊字符添加转义字符后，符合我们所定义的效果! ")]),t._v(" 代码示例： ")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let value = 23.34")]),s("p",{staticClass:"note"},[t._v("//这是在不是对象的时候的正则写法")]),s("p",{staticClass:"code_font"},[t._v("console.log(/\\d+\\.\\d+/.test(value))")]),s("p",{staticClass:"note"},[t._v("//创建RegExp对象后的正则写法")]),s("p",{staticClass:"code_font"},[t._v("let regularRule = '\\\\d+\\\\.\\\\d+'")]),s("p",{staticClass:"code_font"},[t._v("console.log(regularRule)")]),s("p",{staticClass:"code_font"},[t._v("let regular = new RegExp(regularRule)")]),s("p",{staticClass:"code_font"},[t._v("console.log(regular.test(value))")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v(" 起始符^的所指就是一个字符串的起始字符位置，结束符$则是用来匹配字符串最后一位的终止字符的 ")]),s("p",[t._v("代码示例:")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"note"},[t._v("//判断字符串都是数字，提取字符串中的数字")]),s("p",{staticClass:"code_font"},[t._v('let value = "1996adsionli"')]),s("p",{staticClass:"code_font"},[t._v('let rule = "^\\\\d$"')]),s("p",{staticClass:"code_font"},[t._v('let regular = new RegExp(rule, "g")')]),s("p",{staticClass:"code_font"},[t._v("regular.test(value)")]),s("p",{staticClass:"code_font"},[t._v("value.match(/^\\d$s/)")]),s("p",{staticClass:"note"},[t._v("//这里如想要让其匹配可以如此设置 /^\\d{4}$/g 这样就可以匹配了")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v("数字的标识为\\d,\\d会用来匹配数值；\\D的匹配模式与\\d不同,\\D则是用来匹配非数值的字符")]),s("p",[t._v("空白元字符的匹配为\\s，当字符串中存在空白或者换行符的时候都会匹配成功；\\S则是除了空白之外")]),s("p",[t._v("代码示例:")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let value01 = "adsionli:19960311 猪哥:19960422";')]),s("p",{staticClass:"code_font"},[t._v('let rule01 = "\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d";')]),s("p",{staticClass:"code_font"},[t._v("let regular01 = new RegExp(rule01);")]),s("p",{staticClass:"code_font"},[t._v("regular01.test(value01);")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\d\\d\\d\\d\\d\\d\\d/g);")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\D/g);")]),s("p",{staticClass:"code_font"},[t._v('let rule02 = "\\\\s";')]),s("p",{staticClass:"code_font"},[t._v('let rule03 = "\\\\S";')]),s("p",{staticClass:"code_font"},[t._v("let regular02 = new RegExp(rule02, 'g');")]),s("p",{staticClass:"code_font"},[t._v("let regular03 = new RegExp(rule03, 'g');")]),s("p",{staticClass:"code_font"},[t._v("regular02.test(value01);")]),s("p",{staticClass:"code_font"},[t._v("regular03.test(value01);")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\s/g);")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\S/g);")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/[^:\\s\\d]+/g)")]),s("p",{staticClass:"note"},[t._v("//去除字符串的前后字符")]),s("p",{staticClass:"code_font"},[t._v("value01 = value01.replace(/(^\\s*|\\s*$)/g, '')")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v("w元字符主要用来匹配：字符、数字、下划线。所以\\w实际囊括了(a-z|A-Z|\\d|_)")]),s("p",[t._v("W元字符主要用来匹配非字符的特殊符号")]),s("p",[t._v("代码示例:")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let username = prompt("请输入用户名(必须字母开头且最多10位字符)")')]),s("p",{staticClass:"note"},[t._v("//i标识不区分大小写")]),s("p",{staticClass:"code_font"},[t._v("/^(a-z|A-Z)/w{4,9}$/.test(username)")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v("点元字符的匹配则是很广的，可以匹配全部字符，无论是特殊字符还是字母还是数字都可以匹配")]),s("p",{staticClass:"font_emphasize"},[t._v("注：如果想要单纯的匹配.这一个字符的时候，必须进行转义才可以 \\.")]),s("p",{staticClass:"font_emphasize"},[t._v(" 注2：点元字符无法匹配换行符，所以如果要匹配一个带有换行符的所有字符，就必须使用单行模式s，它会自动忽略掉换行符，书写方式：/.+/s ")]),s("p",[t._v("代码示例:")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let value = "blog.adsionli.com"')]),s("p",{staticClass:"code_font"},[t._v("value.match(/.*/g)")]),s("p",{staticClass:"code_font"},[t._v("value.match(/\\./g).length")]),s("p",{staticClass:"code_font"},[t._v("value.match(/^\\w+\\.\\w+\\.\\w+$/)")]),s("p",{staticClass:"code_font"},[t._v("/^\\w+\\.\\w+\\.\\w+$/.test(value)")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"mt-10"},[s("h3",[t._v("匹配全部字符的一些方式")]),s("div",{staticClass:"paragraph"},[s("p",[t._v("代码示例：")])]),s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let data = `")]),s("p",{staticClass:"code_font tab_1"},[t._v("adsionli")]),s("p",{staticClass:"code_font tab_1"},[t._v("shirley")]),s("p",{staticClass:"code_font"},[t._v("`;")]),s("p",{staticClass:"note"},[t._v("//匹配全部字符的一些方式，使用原子表来进行匹配")]),s("p",{staticClass:"code_font"},[t._v("data.match(/.+/s);")]),s("p",{staticClass:"code_font"},[t._v("data.match(/[\\w\\W]+/);")]),s("p",{staticClass:"code_font"},[t._v("data.match(/[\\d\\D]+/);")]),s("p",{staticClass:"code_font"},[t._v("data.match(/[\\s\\S]+/)")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"mt-10"},[s("h3",[t._v("模式修正符i与g")]),s("div",{staticClass:"paragraph"},[s("p",[t._v("模式修正符i: 匹配时不区分大小写")]),s("p",[t._v("模式修正符g: 匹配时，匹配全部符合的字符")]),s("p",{staticClass:"font_emphasize"},[t._v("模式修正符在使用的时候是可以组合的，也就是可以同时使用在正则匹配中")]),s("p",[t._v("代码示例：")])]),s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let value = adsionlI@foxmail.com;")]),s("p",{staticClass:"code_font"},[t._v("value.match(/i/i);")]),s("p",{staticClass:"code_font"},[t._v("value.match(/i/g);")]),s("p",{staticClass:"code_font"},[t._v("value.match(/i/gi);")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v("m多行匹配就可以将字符串的每一行都进行单独处理，并且可以使用map进行遍历")]),s("p",[t._v("代码示例：")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let value = `")]),s("p",{staticClass:"code_font tab_1"},[t._v("#1 js,200元 #")]),s("p",{staticClass:"code_font tab_1"},[t._v("#2 php,300元 #")]),s("p",{staticClass:"code_font tab_1"},[t._v("#3 adsionli # shirley")]),s("p",{staticClass:"code_font tab_1"},[t._v("#4 node.js,200元 #")]),s("p",{staticClass:"code_font"},[t._v("`;")]),s("p",{staticClass:"code_font"},[t._v("let handleData = value.match(/^\\s*#\\d+\\s.+\\s+#\\s*$/gm).map((val) => {")]),s("p",{staticClass:"code_font tab_1"},[t._v("let handleVal = val.replace(/\\s*#\\d+\\s/, '').replace(/\\s+#\\s*$/, '');")]),s("p",{staticClass:"code_font tab_1"},[t._v("[name, value] = handleVal.split(',')")]),s("p",{staticClass:"code_font tab_1"},[t._v("return { name, value }")]),s("p",{staticClass:"code_font"},[t._v("});")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v("每个字符都有属性，如L属性表示是字母，P 表示标点符号")]),s("p",{staticClass:"font_emphasize"},[t._v(" 这些字符属性需要结合u修正符才有效。其他属性简写可以访问 "),s("a",{attrs:{href:"https://www.unicode.org/Public/UCD/latest/ucd/PropertyValueAliases.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性的别名")]),t._v(" 网站查看。 ")]),s("p",[t._v("同时为了查找具有某种属性的字符，需要使用\\p这个元字符，写作/p{...}")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"paragraph"},[s("p",[t._v("代码示例")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let value01 = "你好，中国！ hello China!"')]),s("p",{staticClass:"note"},[t._v("//匹配中文字符")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\p{sc=Han}/gu)")]),s("p",{staticClass:"note"},[t._v("//匹配字母")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\p{L}/gu)")]),s("p",{staticClass:"note"},[t._v("//匹配小写字母与大写字母")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\p{Ll}/gu)")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\p{Lu}/gu)")]),s("p",{staticClass:"note"},[t._v("//匹配标点符号")]),s("p",{staticClass:"code_font"},[t._v("value01.match(/\\p{P}/gu)")]),s("p",{staticClass:"code_font"},[t._v("......")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('[1.匹配的字符 2.所在下标 3.原字符串] => ["u", index: , input: , groups: ]')]),s("p",{staticClass:"code_font"},[t._v(' 但是，当使用g修正符是，其返回的是类似： ["a", "d", "s", "i", "o"]的形式，就和单一匹配时完全不同，无法携带全部信息，这是就需要下面的处理了 ')])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let str = "adsionli";')]),s("p",{staticClass:"code_font"},[t._v("let reg = new RegExp('/\\\\w/');")]),s("p",{staticClass:"note"},[t._v("//当无匹配项时，其返回的是Null，所以可以自动停下来")]),s("p",{staticClass:"code_font"},[t._v("while(res = reg.exec(str)){")]),s("p",{staticClass:"code_font tab_1"},[t._v("console.log(res)")]),s("p",{staticClass:"code_font"},[t._v("}")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("const str1 = 'table football';")]),s("p",{staticClass:"code_font"},[t._v("const regex1 = new RegExp('foo', 'y');")]),s("p",{staticClass:"code_font"},[t._v("regex1.lastIndex = 6;")]),s("p",{staticClass:"note"},[t._v("//这里返回的是true, 但是lastIndex会变为9")]),s("p",{staticClass:"code_font"},[t._v("console.log(regex1.test(str1));")]),s("p",{staticClass:"note"},[t._v("//这里返回的就是false了，因为他匹配的开始时第9位，就无法找到匹配项了")]),s("p",{staticClass:"code_font"},[t._v("console.log(regex1.test(str1));")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"summary"},[s("span",[t._v(" 在原子表中，如果是在原子表内部的内容，其与不在原子表中的表达是不一样的，比如说[()]、[^]等， ()在原子表中只是普通的括号，但是在外面则是原子组的意思；同理^在原子表中是除了的意思，在外面是起始边界符 ")]),s("br"),s("span",{staticClass:"font_emphasize"},[t._v(" 原子表是不会去解析字符的，所以在使用的时候需要注意！ ")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v("let str = 'adsionli';")]),s("p",{staticClass:"code_font"},[t._v("str.match(/[a-z]+/gi)")]),s("p",{staticClass:"code_font"},[t._v("str.match(/[0-9]+/gi)")]),s("p",{staticClass:"code_font"},[t._v("str.match(/^[a-z]\\w+/gi)")]),s("p",{staticClass:"code_font"},[t._v("等等...")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let str = "adsionli: 1996-02-22";')]),s("p",{staticClass:"note"},[t._v("//这里输出的就是adsionli")]),s("p",{staticClass:"code_font"},[t._v("str.match(/[^\\d\\p{P}]/gui);")]),s("p",{staticClass:"note"},[t._v("//不使用原子表的排除实现方式")]),s("p",{staticClass:"code_font"},[t._v("str.match(/\\p{L}/gui);")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"mt_10"},[s("h3",[t._v("断言匹配符：?=、?<=、?!、?<!")]),s("div",{staticClass:"summary"},[s("span",[t._v("断言匹配符相当于代码中的if语句，可以用来预匹配字符串，但是这四个断言匹配符的功能各不相同")])]),s("ul",{staticClass:"list_label"},[s("li",[s("p",{staticClass:"label_title"},[t._v("?=负向等匹配符")]),s("div",{staticClass:"label_body"},[s("p",[t._v("exp1(?=exp2)：查找 exp2 后面的 exp1。")]),s("p",[t._v("相当于：if(exp1 && exp2)")])])]),s("li",[s("p",{staticClass:"label_title"},[t._v("?<=正向等匹配符")]),s("div",{staticClass:"label_body"},[s("p",[t._v("exp1(?=exp2)：查找 exp2 后面的 exp1。")]),s("p",[t._v("相当于：if(exp2 && exp1)")])])]),s("li",[s("p",{staticClass:"label_title"},[t._v("?!负向非匹配符")]),s("div",{staticClass:"label_body"},[s("p",[t._v("exp1(?!exp2)：查找后面不是 exp2 的 exp1。")]),s("p",[t._v("相当于：if(exp1 && !exp2)")])])]),s("li",[s("p",{staticClass:"label_title"},[t._v("?<!正向非匹配符")]),s("div",{staticClass:"label_body"},[s("p",[t._v("(?<!exp2)exp1：查找前面不是 exp2 的 exp1。")]),s("p",[t._v("相当于：if(!exp2 && exp1)")])])])]),s("p",[t._v("代码示例：")]),s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let str = "http://adsionli.com"')]),s("p",{staticClass:"code_font"},[t._v("let reg1 = new RegExp('/^(?<=http(:|s:))\\/{2}.*/gi')")]),s("p",{staticClass:"code_font"},[t._v("reg1.exec(str)")]),s("p",{staticClass:"code_font"},[t._v('let str1 = "adsionli: name, 03-11: birthday"')]),s("p",{staticClass:"code_font"},[t._v("let reg2 = new RegExp('/.*(?=:\\\\s*(name|birthday))/gi')")]),s("p",{staticClass:"code_font"},[t._v("reg2.test(str1)")]),s("p",{staticClass:"note"},[t._v("//断言处理手机号码的模糊,模糊中间四位")]),s("p",{staticClass:"code_font"},[t._v('let phone = "18521111021"')]),s("p",{staticClass:"code_font"},[t._v("phone.replace(/(?<=\\d{4}\\d{4}(?=\\d{3}))/gi , v => {")]),s("p",{staticClass:"code_font tab_1"},[t._v('return "*".repeat(4)0;')]),s("p",{staticClass:"code_font"},[t._v("})")]),s("p",{staticClass:"note"},[t._v("//字符串中在开头位置后不可以出现adsionli")]),s("p",{staticClass:"code_font"},[t._v('let str2 = "i am adsionl !"')]),s("p",{staticClass:"code_font"},[t._v("let reg3 = new RegExp('/^(?!.*adsionli.*).*/i')")]),s("p",{staticClass:"code_font"},[t._v("reg3.test(str2)")]),s("p",{staticClass:"note"},[t._v("//处理网址")]),s("p",{staticClass:"code_font"},[t._v("let str3 = [https://blog.adsionli.com, https://image.adsionli.com, https://adsionli.com]")]),s("p",{staticClass:"code_font"},[t._v("str3.replace(/https:\\/\\/([a-z]+)?(?<!blog)\\..+?(?=\\/)/gi, v => {")]),s("p",{staticClass:"code_font tab_1"},[t._v('return "https://blog.adsionli.com"')]),s("p",{staticClass:"code_font"},[t._v("})")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("li",[s("p",{staticClass:"label_title"},[t._v("多正则匹配规则的使用(不使用RegExp对象，使用Array的every)")]),s("div",{staticClass:"label_body"},[t._v("代码示例如下：")]),s("div",{staticClass:"code"},[s("p",{staticClass:"code_font"},[t._v('let password = "adsionli1996"')]),s("p",{staticClass:"code_font"},[t._v("let regList = [/[a-z0-9]{5,15}/, /[A-Z]+/, /[./-+=~]+/, /[0-9]+/]")]),s("p",{staticClass:"code_font"},[t._v("let status = regList.every(e => e.test(password))")]),s("p",{staticClass:"code_font"},[t._v("console.log(status)")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("li",[s("p",{staticClass:"label_title"},[t._v("禁止贪婪 ?")]),s("div",{staticClass:"summary"},[s("span",[t._v("?符号不仅仅具有只出现一次或0次的作用，当其配合着*,+,{}使用时还具有禁止贪婪的作用！")])]),s("div",{staticClass:"label_body"},[s("p",[t._v("(1) +?一起使用的时候，?会发挥禁止贪婪的作用，他会使匹配的内容仅仅限制在出现第一次的地方。虽然+本身是代表1-~，但是被?禁止贪婪了")]),s("p",[t._v("(2) *?一起使用的时候，?会发挥禁止贪婪的作用，他会使匹配的内容仅仅限制在出现第零次的地方。虽然*本身是代表0-~，但是被?禁止贪婪了")]),s("p",[t._v("(3) {}?一起使用的时候，?会发挥禁止贪婪的作用，他会使匹配的内容仅仅限制在花括号中最小的那个值那里。")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("li",[s("p",{staticClass:"label_title"},[t._v("matchAll方法")]),s("div",{staticClass:"summary"},[s("span",[t._v("matchAll方法可以将每一位匹配的元素都按照match输出的样子输出出来，但是在低版本中的浏览器中可能无法使用。")]),s("span",[t._v("matchAll返回的是一个迭代器类，可以使用for进行循环！")])]),s("div",{staticClass:"code"},[s("p",{staticClass:"note"},[t._v("//使用递归以及exec方法来模拟matchAll方法")]),s("p",{staticClass:"note"},[t._v("//递归")]),s("p",{staticClass:"code_font"},[t._v("String.prototype.matchAll(reg){")]),s("p",{staticClass:"code_font tab_1"},[t._v("let res = this.match(reg);")]),s("p",{staticClass:"code_font tab_1"},[t._v("if(res){")]),s("p",{staticClass:"code_font tab_2"},[t._v("let str = this.replace(res[0], '^'.repeat(res[0.length]));")]),s("p",{staticClass:"code_font tab_2"},[t._v("match = str.matchAll(reg);")]),s("p",{staticClass:"code_font tab_2"},[t._v("return [res, ...match]")]),s("p",{staticClass:"code_font tab_1"},[t._v("}")]),s("p",{staticClass:"code_font"},[t._v("}")]),s("p",{staticClass:"note"},[t._v("//exec方法")]),s("p",{staticClass:"code_font"},[t._v('let str = "=adsionli=1996="')]),s("p",{staticClass:"code_font"},[t._v("let reg = new RegExp(/=/gi)")]),s("p",{staticClass:"code_font"},[t._v("let showList = [];")]),s("p",{staticClass:"code_font"},[t._v("while(res = reg.exec(str)){")]),s("p",{staticClass:"code_font tab_1"},[t._v("showList.push(res)")]),s("p",{staticClass:"code_font"},[t._v("}")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"label_body"},[s("p",[t._v("代码示例")])])}],c=s("3835"),i=(s("4d63"),s("c607"),s("ac1f"),s("2c3e"),s("25f0"),s("5319"),s("00b4"),s("466d"),s("99af"),s("a15b"),s("a434"),s("d81d"),s("1276"),s("e9c4"),function(){var t=this,a=t.$createElement,s=t._self._c||a;return 0!=t.treeData.length?s("div",{staticClass:"mt-10 mb-10"},[s("el-tree",{attrs:{data:t.treeData,props:t.structure}})],1):t._e()}),o=[],n={props:{treeData:{type:Array,default:[]},structure:{type:Object,default:{children:"children",label:"label"}}}},_=n,r=s("2877"),p=Object(r["a"])(_,i,o,!1,null,null,null),v=p.exports,d=s("0a8f"),h={data:function(){return{changeValue:"",atomicValue:"",esacpe:["",""],borderValue:"",numberSpaceValue:[],judgeInputValue:"",pointValue:[],moreParagraphValue:"",structure:d.structure,treeData:d.data,atomHt1:"<h1>123<h1>",regGroup1:"/<(h[1-6])>[Ss]+</\\\\1>/gi",atomHt2:"\n        <h1>adsionli</h1>\n        <span>code is so fun</span>\n        <h3>love coding</h3>\n      ",atomHt3:"<p>$2</p",regGroup2:"/<(h[1-6])([sS]*)</\\\\1>/gi",atomHt4:"\n        https://blog.adsionli.com\n        http://image.adsionli.com\n        http://adsionli.com\n      ",regGroup3:"/https?://((?:\\w+.)?w+.(?:com|org|cn|top))/gi",atomHt5:"<font style='font-weight:bolder'>$&<font>",atomHt6:"?<url>",atomHt7:"<a style='color:red' href='adsionli.com.cn'>adsionli blog</a>",atomHt8:"?<url>",atomHt9:"<name>"}},methods:{handleStringHighLight:function(){this.resetHighLight();var t=prompt("请输入需要替换的内容，可用正则"),a=new RegExp(t,"g"),s=document.getElementById("string_high_light");s.innerHTML=s.innerHTML.replace(a,(function(t){return'<span style="color:red">'.concat(t,"</span>")}))},resetHighLight:function(){var t=document.getElementById("string_high_light");t.innerHTML="adsionli1996"},handleChange:function(){var t="021-88888888",a=/(010|021)\-\d{7,8}/.test(t);this.changeValue=a?"匹配":"不匹配"},handleAtom:function(){this.atomicValue="";var t="1996031119960422",a=t.match(/[199603]/g),s=t.match(/(1996|03)/g);this.atomicValue+="atom group:".concat(a.join(","),"     atom list: ").concat(s.join(","))},handleEsacpe:function(){var t=233.345;console.log(/\d+\.\d+/.test(t));var a="\\d+\\.\\d+";this.esacpe.splice(0,1,"d+.d+ 正确转义: \\d+\\.\\d+");var s=new RegExp(a);console.log(s.test(t));var e="http:blog.adsionli.com",l="https?\\:\\w+\\.\\w+\\.\\w+";this.esacpe.splice(1,1,"https?:w+.w+.w+ 正确转义: https?\\:\\w+\\.\\w+\\.\\w+");var c=new RegExp(l);console.log(c.test(e))},handleBorder:function(){this.borderValue="";var t="1996adsionli",a="^\\d$",s=new RegExp(a,"g");this.borderValue+="test结果:"+(s.test(t)?"匹配":"不匹配"),this.borderValue+="   match结果:"+t.match(/^\d$/)},handleNumberSpace:function(){var t="     adsionli:19960311 猪哥:19960422       ";t=t.replace(/(^\s*|\s*$)/g,""),this.numberSpaceValue.splice(0,1,"去除字符串前后的空格: ".concat(t)),this.numberSpaceValue.splice(1,1,"去除字符串前后的空格后字符串内的空格数量: ".concat(t.match(/\s/g).length));var a="\\d\\d\\d\\d\\d\\d\\d\\d",s=new RegExp(a);this.numberSpaceValue.splice(2,1,"规则1：".concat(s.test(t)?"匹配":"不匹配")),this.numberSpaceValue.splice(3,1,"字符串match /".concat(a,"/g的结果：").concat(t.match(/\d\d\d\d\d\d\d\d/g).join(","))),this.numberSpaceValue.splice(4,1,"字符串match /\\D/g的结果：".concat(t.match(/\D/g).join(",")));var e="\\s",l="\\S",c=new RegExp(e,"g"),i=new RegExp(l,"g");this.numberSpaceValue.splice(5,1,"规则2：".concat(c.test(t)?"匹配":"不匹配")),this.numberSpaceValue.splice(6,1,"规则3：".concat(i.test(t)?"匹配":"不匹配")),this.numberSpaceValue.splice(7,1,"字符串match /\\s/g的结果：".concat(t.match(/\s/g).join(","))),this.numberSpaceValue.splice(8,1,"字符串match /\\S/g的结果：".concat(t.match(/\S/g).join(","))),this.numberSpaceValue.splice(9,1,"字符串match /[^:\\s\\d]+/g的结果：".concat(t.match(/[^:\s\d]+/g).join(","))),this.numberSpaceValue.splice(10,1,"字符串中空格的个数: ".concat(t.match(/\s/g).length))},handleChar:function(){var t=prompt("请输入用户名(必须字母开头且最多10位字符)");this.judgeInputValue=/^[a-z]\w{4,9}$/i.test(t)?"符合":"不符合"},handlePoint:function(){var t="blog.adsionli.com";this.pointValue.splice(0,1,"匹配全部字符: ".concat(t.match(/.*/g).join(","))),this.pointValue.splice(1,1,"字符串中.的数量: ".concat(t.match(/\./g).length)),this.pointValue.splice(2,1,"简单的网址匹配: ".concat(/^\w+\.\w+\.\w+$/.test(t)?"匹配":"不匹配"))},handleMoreParagraphValue:function(){var t="\n            #1 js,200元 #\n            #2 php,300元 #\n            #3 adsionli # shirley\n            #4 node.js,200元 #\n        ",a=t.match(/^\s*#\d+\s.+\s+#\s*$/gm).map((function(a){var s=a.replace(/\s*#\d+\s/,"").replace(/\s+#\s*$/,""),e=s.split(","),l=Object(c["a"])(e,2);return name=l[0],t=l[1],{name:name,value:t}}));this.moreParagraphValue=JSON.stringify(a,null,2)}},components:{TreeList:v}},u=h,m=Object(r["a"])(u,e,l,!1,null,null,null);a["default"]=m.exports}}]);